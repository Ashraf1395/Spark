4. Collect your data as a pyspark dataframe and perform different
operations.
Note: Consider only three files for creating a dataframe among all
case, region and TimeProvince
a. Read the data, show it and Count the number of records.

case_df=spark.read.option("Header",True).option("inferSchema",True).csv("/input_data/case.csv)
case_df.show()
case_df.count()    #Output - 174
b. Describe the data with a describe function.

case_df.describe() 
#Output
DataFrame[summary: string,  case_id: string, province: string, city: string, infection_case: string,
confirmed: string, latitude: string, longitude: string]

c. If there is any duplicate value drop it.
case_df.dropDuplicates()
#No Duplicates in case dataframe
can be check
case_df.dropDulplicates().count()   #174 
#Same number of records before and after using dropDuplicates() function
d. Use limit function for showcasing a limited number of
records.


>>> casedf.limit(10).show()
+--------+--------+---------------+-----+--------------------+---------+---------+----------+
| case_id|province|           city|group|      infection_case|confirmed| latitude| longitude|
+--------+--------+---------------+-----+--------------------+---------+---------+----------+
| 1000001|   Seoul|     Yongsan-gu| true|       Itaewon Clubs|      139|37.538621|126.992652|
| 1000002|   Seoul|      Gwanak-gu| true|             Richway|      119| 37.48208|126.901384|
| 1000003|   Seoul|        Guro-gu| true| Guro-gu Call Center|       95|37.508163|126.884387|
| 1000004|   Seoul|   Yangcheon-gu| true|Yangcheon Table T...|       43|37.546061|126.874209|
| 1000005|   Seoul|      Dobong-gu| true|     Day Care Center|       43|37.679422|127.044374|
| 1000006|   Seoul|        Guro-gu| true|Manmin Central Ch...|       41|37.481059|126.894343|
| 1000007|   Seoul|from other city| true|SMR Newly Planted...|       36|        -|         -|
| 1000008|   Seoul|  Dongdaemun-gu| true|       Dongan Church|       17|37.592888|127.056766|
| 1000009|   Seoul|from other city| true|Coupang Logistics...|       25|        -|         -|
| 1000010|   Seoul|      Gwanak-gu| true|     Wangsung Church|       30|37.481735|126.930121|
+--------+--------+---------------+-----+--------------------+---------+---------+----------+
e. If you find the column name is not suitable, change the
column name.[optional]
#case_id has a typo -" case_id" renamed it
>>> casedf.withColumnRenamed(" case_id","case_id").show()
+--------+--------+---------------+-----+--------------------+---------+---------+----------+
|case_id|province|           City|group|      infection_case|confirmed| latitude| longitude|
+--------+--------+---------------+-----+--------------------+---------+---------+----------+
| 1000001|   Seoul|     Yongsan-gu| true|       Itaewon Clubs|      139|37.538621|126.992652|
| 1000002|   Seoul|      Gwanak-gu| true|             Richway|      119| 37.48208|126.901384|
| 1000003|   Seoul|        Guro-gu| true| Guro-gu Call Center|       95|37.508163|126.884387|
| 1000004|   Seoul|   Yangcheon-gu| true|Yangcheon Table T...|       43|37.546061|126.874209|
| 1000005|   Seoul|      Dobong-gu| true|     Day Care Center|       43|37.679422|127.044374|
| 1000006|   Seoul|        Guro-gu| true|Manmin Central Ch...|       41|37.481059|126.894343|
| 1000007|   Seoul|from other city| true|SMR Newly Planted...|       36|        -|         -|
| 1000008|   Seoul|  Dongdaemun-gu| true|       Dongan Church|       17|37.592888|127.056766|
| 1000009|   Seoul|from other city| true|Coupang Logistics...|       25|        -|         -|
| 1000010|   Seoul|      Gwanak-gu| true|     Wangsung Church|       30|37.481735|126.930121|
| 1000011|   Seoul|   Eunpyeong-gu| true|Eunpyeong St. Mar...|       14| 37.63369|  126.9165|
| 1000012|   Seoul|   Seongdong-gu| true|    Seongdong-gu APT|       13| 37.55713|  127.0403|
| 1000013|   Seoul|      Jongno-gu| true|Jongno Community ...|       10| 37.57681|   127.006|
| 1000014|   Seoul|     Gangnam-gu| true|Samsung Medical C...|        7| 37.48825| 127.08559|
| 1000015|   Seoul|        Jung-gu| true|Jung-gu Fashion C...|        7|37.562405|126.984377|
| 1000016|   Seoul|   Seodaemun-gu| true|  Yeonana News Class|        5|37.558147|126.943799|
| 1000017|   Seoul|      Jongno-gu| true|Korea Campus Crus...|        7|37.594782|126.968022|
| 1000018|   Seoul|     Gangnam-gu| true|Gangnam Yeoksam-d...|        6|        -|         -|
| 1000019|   Seoul|from other city| true|Daejeon door-to-d...|        1|        -|         -|
| 1000020|   Seoul|   Geumcheon-gu| true|Geumcheon-gu rice...|        6|        -|         -|
+--------+--------+---------------+-----+--------------------+---------+---------+----------+
only showing top 20 rows
f. Select the subset of the columns.
 casedf.select("province","confirmed").show()
+--------+---------+
|province|confirmed|
+--------+---------+
|   Seoul|      139|
|   Seoul|      119|
|   Seoul|       95|
|   Seoul|       43|
|   Seoul|       43|
|   Seoul|       41|
|   Seoul|       36|
|   Seoul|       17|
|   Seoul|       25|
|   Seoul|       30|
|   Seoul|       14|
|   Seoul|       13|
|   Seoul|       10|
|   Seoul|        7|
|   Seoul|        7|
|   Seoul|        5|
|   Seoul|        7|
|   Seoul|        6|
|   Seoul|        1|
|   Seoul|        6|
+--------+---------+

g. If there is any null value, fill it with any random value or drop
it.
#Yes,Columns latitude and longitude had null values but instead of having null they were written with "-"
casedf.filter(" latitude = '-' or longitude = '-').show()
#So I did a simple trick and multiplied all values of latitude and longitude columns with 1 so columns which had values "-" were not able to return any output and returned null
casedf=casedf.withColumn("latitude",casedf.latitude*1).withColumn("longitude",casedf.longitude*1)
 
casedf.filter(" latitude is Null or longitude is Null ").count()
109
# Then I filled those null values with 0
>>> casedf.na.fill(0).show()
+-------+--------+---------------+-----+--------------------+---------+---------+----------+
|case_id|province|           city|group|      infection_case|confirmed| latitude| longitude|
+-------+--------+---------------+-----+--------------------+---------+---------+----------+
|1000001|   Seoul|     Yongsan-gu| true|       Itaewon Clubs|      139|37.538621|126.992652|
|1000002|   Seoul|      Gwanak-gu| true|             Richway|      119| 37.48208|126.901384|
|1000003|   Seoul|        Guro-gu| true| Guro-gu Call Center|       95|37.508163|126.884387|
|1000004|   Seoul|   Yangcheon-gu| true|Yangcheon Table T...|       43|37.546061|126.874209|
|1000005|   Seoul|      Dobong-gu| true|     Day Care Center|       43|37.679422|127.044374|
|1000006|   Seoul|        Guro-gu| true|Manmin Central Ch...|       41|37.481059|126.894343|
|1000007|   Seoul|from other city| true|SMR Newly Planted...|       36|      0.0|       0.0|
|1000008|   Seoul|  Dongdaemun-gu| true|       Dongan Church|       17|37.592888|127.056766|
|1000009|   Seoul|from other city| true|Coupang Logistics...|       25|      0.0|       0.0|
|1000010|   Seoul|      Gwanak-gu| true|     Wangsung Church|       30|37.481735|126.930121|
|1000011|   Seoul|   Eunpyeong-gu| true|Eunpyeong St. Mar...|       14| 37.63369|  126.9165|
|1000012|   Seoul|   Seongdong-gu| true|    Seongdong-gu APT|       13| 37.55713|  127.0403|
|1000013|   Seoul|      Jongno-gu| true|Jongno Community ...|       10| 37.57681|   127.006|
|1000014|   Seoul|     Gangnam-gu| true|Samsung Medical C...|        7| 37.48825| 127.08559|
|1000015|   Seoul|        Jung-gu| true|Jung-gu Fashion C...|        7|37.562405|126.984377|
|1000016|   Seoul|   Seodaemun-gu| true|  Yeonana News Class|        5|37.558147|126.943799|
|1000017|   Seoul|      Jongno-gu| true|Korea Campus Crus...|        7|37.594782|126.968022|
|1000018|   Seoul|     Gangnam-gu| true|Gangnam Yeoksam-d...|        6|      0.0|       0.0|
|1000019|   Seoul|from other city| true|Daejeon door-to-d...|        1|      0.0|       0.0|
|1000020|   Seoul|   Geumcheon-gu| true|Geumcheon-gu rice...|        6|      0.0|       0.0|
+-------+--------+---------------+-----+--------------------+---------+---------+----------+
only showing top 20 rows
h. Filter the data based on different columns or variables and
do the best analysis.

We may want to find out all the diferent infection_case in Daegu Province with more than 10
confirmed cases.
>>> casedf.filter(" province = 'Daegu' and confirmed>10 ").show()
+-------+--------+------------+-----+--------------------+---------+---------+----------+
|case_id|province|        city|group|      infection_case|confirmed| latitude| longitude|
+-------+--------+------------+-----+--------------------+---------+---------+----------+
|1200001|   Daegu|      Nam-gu| true|  Shincheonji Church|     4511| 35.84008|  128.5667|
|1200002|   Daegu|Dalseong-gun| true|Second Mi-Ju Hosp...|      196|35.857375|128.466651|
|1200003|   Daegu|      Seo-gu| true|Hansarang Convale...|      124|35.885592|128.556649|
|1200004|   Daegu|Dalseong-gun| true|Daesil Convalesce...|      101|35.857393|128.466653|
|1200005|   Daegu|     Dong-gu| true|     Fatima Hospital|       39| 35.88395|128.624059|
|1200008|   Daegu|           -|false|     overseas inflow|       41|     null|      null|
|1200009|   Daegu|           -|false|contact with patient|      917|     null|      null|
|1200010|   Daegu|           -|false|                 etc|      747|     null|      null|
+-------+--------+------------+-----+--------------------+---------+---------+----------+

i. Sort the number of confirmed cases. Confirmed column is
there in the dataset. Check with descending sort also.

>>> casedf.orderBy(casedf.confirmed.desc()).show()
+-------+-----------------+---------------+-----+--------------------+---------+---------+----------+
|case_id|         province|           city|group|      infection_case|confirmed| latitude| longitude|
+-------+-----------------+---------------+-----+--------------------+---------+---------+----------+
|1200001|            Daegu|         Nam-gu| true|  Shincheonji Church|     4511| 35.84008|  128.5667|
|1200009|            Daegu|              -|false|contact with patient|      917|     null|      null|
|1200010|            Daegu|              -|false|                 etc|      747|     null|      null|
|6000001| Gyeongsangbuk-do|from other city| true|  Shincheonji Church|      566|     null|      null|
|2000020|      Gyeonggi-do|              -|false|     overseas inflow|      305|     null|      null|
|1000036|            Seoul|              -|false|     overseas inflow|      298|     null|      null|
|1200002|            Daegu|   Dalseong-gun| true|Second Mi-Ju Hosp...|      196|35.857375|128.466651|
|6000012| Gyeongsangbuk-do|              -|false|contact with patient|      190|     null|      null|
|1000037|            Seoul|              -|false|contact with patient|      162|     null|      null|
|1000001|            Seoul|     Yongsan-gu| true|       Itaewon Clubs|      139|37.538621|126.992652|
|6000013| Gyeongsangbuk-do|              -|false|                 etc|      133|     null|      null|
|1200003|            Daegu|         Seo-gu| true|Hansarang Convale...|      124|35.885592|128.556649|
|1000002|            Seoul|      Gwanak-gu| true|             Richway|      119| 37.48208|126.901384|
|6000002| Gyeongsangbuk-do|   Cheongdo-gun| true|Cheongdo Daenam H...|      119| 35.64887|  128.7368|
|4100001|Chungcheongnam-do|     Cheonan-si| true|gym facility in C...|      103| 36.81503|  127.1139|
|1200004|            Daegu|   Dalseong-gun| true|Daesil Convalesce...|      101|35.857393|128.466653|
|1000038|            Seoul|              -|false|                 etc|      100|     null|      null|
|1000003|            Seoul|        Guro-gu| true| Guro-gu Call Center|       95|37.508163|126.884387|
|2000022|      Gyeonggi-do|              -|false|                 etc|       84|     null|      null|
|1400005|          Incheon|              -|false|     overseas inflow|       68|     null|      null|
+-------+-----------------+---------------+-----+--------------------+---------+---------+----------+
only showing top 20 rows
j. In case of any wrong data type, cast that data type from
integer to string or string to integer.

casedf.withColumn("latitude",casedf.latitude.cast('integer')).show()

k. Use group by on top of province and city column and agg it
with sum of confirmed cases.
>>> casedf.groupBy('province','city').sum('confirmed').show()
+----------------+---------------+--------------+
|        province|           city|sum(confirmed)|
+----------------+---------------+--------------+
|Gyeongsangnam-do|       Jinju-si|             9|
|           Seoul|        Guro-gu|           139|
|           Seoul|     Gangnam-gu|            18|
|         Daejeon|              -|           100|
|    Jeollabuk-do|from other city|             6|
|Gyeongsangnam-do|Changnyeong-gun|             7|
|           Seoul|              -|           561|
|         Jeju-do|from other city|             1|
|Gyeongsangbuk-do|              -|           345|
|Gyeongsangnam-do|   Geochang-gun|            18|
|Gyeongsangbuk-do|        Gumi-si|            10|
|         Incheon|from other city|           117|
|           Busan|              -|            85|
|           Daegu|         Seo-gu|           124|
|           Busan|     Suyeong-gu|             5|
|     Gyeonggi-do|   Uijeongbu-si|            50|
|           Seoul|     Yongsan-gu|           139|
|           Daegu|              -|          1705|
|           Seoul|   Seodaemun-gu|             5|
|     Gyeonggi-do|    Seongnam-si|            94|
+----------------+---------------+--------------+
only showing top 20 rows
l. For joins we will need one more file.you can use region file.
User different different join methods.for example
cases.join(regions, ['province','city'],how='left')
You can do your best analysis.
